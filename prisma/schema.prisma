// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  name      String   @db.VarChar(100)
  email     String   @id @db.VarChar(100)
  password  String   @db.VarChar(200)
  token     String?  @db.VarChar(250)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user")
}

model profile {
  email     String   @id @db.VarChar(100)
  firstName String   @db.VarChar(100)
  lastName  String   @db.VarChar(100)
  city      String?  @db.VarChar(100)
  country   String?  @db.VarChar(100)
  job       String?  @db.VarChar(100)
  phone     String?  @db.VarChar(25)
  dob       DateTime @db.Date
  address   String?  @db.Text
  bio       String?  @db.Text
  website   String?  @db.VarChar(100)
  instagram String?  @db.VarChar(100)
  github    String?  @db.VarChar(100)
  linkedin  String?  @db.VarChar(100)
  discord   String?  @db.VarChar(100)
  twitter   String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("profile")
}

model blog {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(100)
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("blog")
}

model project {
  id          Int            @id @default(autoincrement())
  title       String         @db.VarChar(100)
  description String?        @db.Text
  status      ProjectStatus? @default(ON_PROGRESS)
  startDate   DateTime       @default(now())
  endDate     DateTime?      @default(now())
  url         String?        @db.VarChar(255)
  github      String?        @db.VarChar(255)
  company     String?        @db.VarChar(255)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt

  @@map("project")
}

enum ProjectStatus {
  ON_PROGRESS
  MAINTENANCE
  COMPLETED
}

model education {
  id              Int      @id @default(autoincrement())
  insituitionName String   @db.VarChar(100)
  city            String   @db.VarChar(100)
  startYear       Int      @db.Int
  endYear         Int?     @db.Int
  major           String?  @db.VarChar(100)
  degree          String?  @db.VarChar(100)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt

  @@map("education")
}

model SkillCategory {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(100)
  Skill     Skill[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("skill_category")
}

model Skill {
  id              Int           @id @default(autoincrement())
  title           String        @db.VarChar(100)
  skillCategoryId Int           @db.Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now()) @updatedAt
  category        SkillCategory @relation(fields: [skillCategoryId], references: [id])

  @@map("skill")
}
